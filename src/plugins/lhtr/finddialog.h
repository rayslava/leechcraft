/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2006-2014  Georg Rudoy
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#pragma once

#include <functional>
#include <QDialog>
#include <interfaces/core/icoreproxy.h>
#include "ui_finddialog.h"

class QTextEdit;
class QWebView;

namespace LeechCraft
{
namespace LHTR
{
	class FindObjectProxy
	{
		ICoreProxy_ptr Proxy_;

		QWebView *View_;
		QTextEdit *HTML_;
	public:
		FindObjectProxy (QWebView*);
		FindObjectProxy (QTextEdit*);

		void SetProxy (ICoreProxy_ptr);

		void Next (const QString&, bool cs);
		void Previous (const QString&, bool cs);

		void Replace (const QString& text, const QString& with, bool cs, bool all);
	private:
		template<typename T>
		T Alt (std::function<T (QWebView*)> viewF, std::function<T (QTextEdit*)> htmlF)
		{
			return View_ ? viewF (View_) : htmlF (HTML_);
		}
	};

	class FindDialog : public QDialog
	{
		Q_OBJECT

		Ui::FindDialog Ui_;

		FindObjectProxy Proxy_;
	public:
		FindDialog (const FindObjectProxy&, ICoreProxy_ptr, QWidget* = 0);
	private slots:
		void on_FindText__textChanged (const QString&);
		void on_ReplaceText__textChanged (const QString&);

		void on_Next__released ();
		void on_Previous__released ();

		void on_Replace__released ();
		void on_ReplaceAll__released ();
	};
}
}
