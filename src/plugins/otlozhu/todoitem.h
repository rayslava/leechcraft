/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2006-2014  Georg Rudoy
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#pragma once

#include <memory>
#include <QStringList>
#include <QDateTime>
#include <QVariantMap>

namespace LeechCraft
{
namespace Otlozhu
{
	class TodoItem;
	typedef std::shared_ptr<TodoItem> TodoItem_ptr;

	class TodoItem
	{
		QString ID_;

		QString Title_;
		QString Comment_;
		QStringList TagIDs_;
		QDateTime Created_;
		QDateTime Due_;

		int Percentage_;
		QStringList Deps_;
	public:
		TodoItem ();
		explicit TodoItem (const QString&);
		TodoItem (const TodoItem&) = delete;
		TodoItem& operator= (const TodoItem&) = delete;

		TodoItem_ptr Clone () const;
		void CopyFrom (const TodoItem_ptr);

		QVariantMap ToMap () const;
		QVariantMap DiffWith (const TodoItem_ptr) const;
		void ApplyDiff (const QVariantMap&);

		static TodoItem_ptr Deserialize (const QByteArray&);
		QByteArray Serialize () const;

		QString GetID () const;

		QString GetTitle () const;
		void SetTitle (const QString&);

		QString GetComment () const;
		void SetComment (const QString&);

		QStringList GetTagIDs () const;
		void SetTagIDs (const QStringList&);

		QDateTime GetCreatedDate () const;
		void SetCreatedDate (const QDateTime&);

		QDateTime GetDueDate () const;
		void SetDueDate (const QDateTime&);

		int GetPercentage () const;
		void SetPercentage (int);

		QStringList GetDeps () const;
		void SetDeps (const QStringList&);
		void AddDep (const QString&);
	};
}
}
