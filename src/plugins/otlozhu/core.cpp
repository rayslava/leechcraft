/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2006-2014  Georg Rudoy
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#include "core.h"

#ifndef DISABLE_SYNC
#include "stager.h"
#include "stagerhandler.h"
#endif

#include "todomanager.h"
#include "todostorage.h"

namespace LeechCraft
{
namespace Otlozhu
{
	Core::Core ()
	: TodoManager_ (new TodoManager ("Default", this))
#ifndef DISABLE_SYNC
	, Stager_ (new Util::Sync::Stager ("org.LeechCraft.Otlozhu", this))
#endif
	{
		connect (TodoManager_,
				SIGNAL (gotEntity (LeechCraft::Entity)),
				this,
				SIGNAL (gotEntity (LeechCraft::Entity)));

#ifndef DISABLE_SYNC
		auto stagerHandler = new StagerHandler (this);

		auto storage = TodoManager_->GetTodoStorage ();
		connect (storage,
				SIGNAL (itemAdded (int)),
				stagerHandler,
				SLOT (handleItemAdded (int)));
		connect (storage,
				SIGNAL (itemRemoved (int)),
				stagerHandler,
				SLOT (handleItemRemoved (int)));
		connect (storage,
				SIGNAL (itemDiffGenerated (QString, QVariantMap)),
				stagerHandler,
				SLOT (handleItemDiffGenerated (QString, QVariantMap)));
#endif
	}

	Core& Core::Instance ()
	{
		static Core c;
		return c;
	}

	ICoreProxy_ptr Core::GetProxy () const
	{
		return Proxy_;
	}

	void Core::SetProxy (ICoreProxy_ptr proxy)
	{
		Proxy_ = proxy;
	}

	void Core::SendEntity (const Entity& e)
	{
		emit gotEntity (e);
	}

	TodoManager* Core::GetTodoManager () const
	{
		return TodoManager_;
	}

#ifndef DISABLE_SYNC
	Util::Sync::Stager* Core::GetStager () const
	{
		return Stager_;
	}
#endif
}
}
