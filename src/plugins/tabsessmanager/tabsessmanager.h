/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2006-2014  Georg Rudoy
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#ifndef PLUGINS_TABSESSMANAGER_TABSESSMANAGER_H
#define PLUGINS_TABSESSMANAGER_TABSESSMANAGER_H
#include <QObject>
#include <interfaces/iinfo.h>
#include <interfaces/iplugin2.h>
#include <interfaces/iactionsexporter.h>
#include <interfaces/ihaverecoverabletabs.h>
#include <interfaces/core/ihookproxy.h>

namespace LeechCraft
{
namespace TabSessManager
{
	class Plugin : public QObject
				 , public IInfo
				 , public IPlugin2
				 , public IActionsExporter
	{
		Q_OBJECT
		Q_INTERFACES (IInfo IPlugin2 IActionsExporter)

		ICoreProxy_ptr Proxy_;
		QList<QList<QObject*>> Tabs_;
		bool IsRecovering_;

		bool IsScheduled_;

		QMenu *SessMgrMenu_;
		struct TabUncloseInfo
		{
			TabRecoverInfo RecInfo_;
			IHaveRecoverableTabs *Plugin_;
		};
		QHash<QAction*, TabUncloseInfo> UncloseAct2Data_;

		QMenu *UncloseMenu_;
	public:
		void Init (ICoreProxy_ptr);
		void SecondInit ();
		QByteArray GetUniqueID () const;
		void Release ();
		QString GetName () const;
		QString GetInfo () const;
		QIcon GetIcon () const;

		QSet<QByteArray> GetPluginClasses () const;

		QList<QAction*> GetActions (ActionsEmbedPlace) const;
	protected:
		bool eventFilter (QObject*, QEvent*);
	private:
		QByteArray GetCurrentSession () const;
		void AddCustomSession (const QString&);
	public slots:
		void hookTabIsRemoving (LeechCraft::IHookProxy_ptr proxy,
				int index,
				int windowId);
	private slots:
		void handleNewTab (const QString&, QWidget*);
		void handleRemoveTab (QWidget*);
		void handleTabMoved (int, int);
		void handleUnclose ();
		void recover ();
		void handleTabRecoverDataChanged ();
		void saveDefaultSession ();
		void saveCustomSession ();
		void loadCustomSession ();

		void handleWindow (int);
		void handleWindowRemoved (int);
	signals:
		void gotActions (QList<QAction*>, LeechCraft::ActionsEmbedPlace);
	};
}
}

#endif
