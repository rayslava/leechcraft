/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2006-2014  Georg Rudoy
 * Copyright (C) 2012 Maxim Koltsov
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#include "stealkilllistfetcher.h"

#include <QNetworkRequest>
#include <QNetworkReply>
#include <QNetworkAccessManager>
#include <QStandardItem>

namespace LeechCraft
{
namespace HotStreams
{
StealKillListFetcher::StealKillListFetcher (QStandardItem *item, QNetworkAccessManager *nam, QObject *parent)
: StreamListFetcherBase (item, nam, parent)
{
	Request (QNetworkRequest (QUrl ("http://listen.42fm.ru:8000/")));
}

QList<StreamListFetcherBase::StreamInfo> StealKillListFetcher::Parse (const QByteArray& /*data*/)
{
	QList<StreamInfo> result;
	QStringList genres;
	genres << "Rock" << "Metal" << "Other";

	StreamInfo mp3Info =
	{
		QString::fromUtf8 ("Радио «42fm» (MP3)"),
		QString::fromUtf8 ("Классика рока и отличное настроение"),
		genres,
		QUrl ("http://listen.42fm.ru:8000/stealkill.m3u"),
		QUrl (),
		QString (),
		"m3u"
	};

	StreamInfo oggInfo =
	{
		QString::fromUtf8 ("Радио «42fm» (OGG)"),
		QString::fromUtf8 ("Классика рока и отличное настроение"),
		genres,
		QUrl ("http://listen.42fm.ru:8000/stealkill-8.0.ogg.m3u"),
		QUrl (),
		QString (),
		"m3u"
	};

	result << mp3Info << oggInfo;

	return result;
}

}
}
