/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2006-2014  Georg Rudoy
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#ifndef PLUGINS_POSHUKU_PROGRESSLINEEDIT_H
#define PLUGINS_POSHUKU_PROGRESSLINEEDIT_H
#include <QKeyEvent>
#include <QLineEdit>
#include "interfaces/poshuku/iaddressbar.h"

class QModelIndex;
class QToolBar;
class QToolButton;

namespace LeechCraft
{
namespace Poshuku
{
	class ProgressLineEdit : public QLineEdit
							, public IAddressBar
	{
		Q_OBJECT
		Q_INTERFACES (LeechCraft::Poshuku::IAddressBar)

		bool IsCompleting_;
		QString PreviousUrl_;

		QToolButton *ClearButton_;

		QList<QToolButton*> VisibleButtons_;
		QList<QToolButton*> HideButtons_;
		QHash<QAction*, QToolButton*> Action2Button_;
	public:
		ProgressLineEdit (QWidget* = 0);

		bool IsCompleting () const;
		QObject* GetQObject ();

		int ButtonsCount () const;
		QToolButton* AddAction (QAction*, bool = false);
		QToolButton* InsertAction (QAction*, int pos = -1, bool = false);
		QToolButton* GetButtonFromAction (QAction*) const;
		void RemoveAction (QAction*);
		void SetVisible (QAction*, bool);
	protected:
		void keyPressEvent (QKeyEvent*);
		void resizeEvent (QResizeEvent*);
		void contextMenuEvent (QContextMenuEvent*);
	private slots:
		void handleCompleterActivated ();
		void textChanged (const QString& text);
		void RepaintButtons ();
		void handleTriggeredButton (QAction*);
		void pasteGo ();
	signals:
		void actionTriggered (QAction*, const QString&);
	};
}
}

#endif
