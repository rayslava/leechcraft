/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2006-2014  Georg Rudoy
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#include "serveradaptor.h"
#include "serverobject.h"

namespace LeechCraft
{
namespace Laughty
{
	ServerAdaptor::ServerAdaptor (ServerObject *obj, ICoreProxy_ptr proxy)
	: QDBusAbstractAdaptor (obj)
	, Server_ (obj)
	, Proxy_ (proxy)
	{
	}

	QStringList ServerAdaptor::GetCapabilities () const
	{
		return Server_->GetCapabilities ();
	}

	uint ServerAdaptor::Notify (const QString& app_name, uint replaces_id,
			const QString& app_icon, const QString& summary, const QString& body,
			const QStringList& actions, const QVariantMap& hints, int expire_timeout)
	{
		return Server_->Notify (app_name, replaces_id, app_icon,
				summary, body, actions, hints, expire_timeout);
	}

	void ServerAdaptor::CloseNotification (uint id)
	{
		Server_->CloseNotification (id);
	}

	void ServerAdaptor::GetServerInformation (QString& name,
			QString& vendor, QString& version, QString& spec_version) const
	{
		name = "Laughty";
		vendor = "LeechCraft";
		version = Proxy_->GetVersion ();
		spec_version = "1.2";
	}
}
}
