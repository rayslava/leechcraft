/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2006-2014  Georg Rudoy
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#pragma once

#include <QDialog>
#include "ui_accountconfigdialog.h"
#include "account.h"

namespace LeechCraft
{
namespace Snails
{
	class AccountConfigDialog : public QDialog
	{
		Q_OBJECT

		Ui::AccountConfigDialog Ui_;
	public:
		AccountConfigDialog (QWidget* = 0);

		QString GetName () const;
		void SetName (const QString&);

		QString GetUserName () const;
		void SetUserName (const QString&);

		QString GetUserEmail () const;
		void SetUserEmail (const QString&);

		QString GetLogin () const;
		void SetLogin (const QString&);

		Account::InType GetInType () const;
		void SetInType (Account::InType);

		QString GetInHost () const;
		void SetInHost (const QString&);

		int GetInPort () const;
		void SetInPort (int);

		Account::OutType GetOutType () const;
		void SetOutType (Account::OutType);

		QString GetOutHost () const;
		void SetOutHost (const QString&);

		int GetOutPort () const;
		void SetOutPort (int);

		QString GetOutLogin () const;
		void SetOutLogin (const QString&);

		bool GetUseSASL () const;
		void SetUseSASL (bool);

		bool GetSASLRequired () const;
		void SetSASLRequired (bool);

		Account::SecurityType GetInSecurity () const;
		void SetInSecurity (Account::SecurityType);

		bool GetInSecurityRequired () const;
		void SetInSecurityRequired (bool);

		Account::SecurityType GetOutSecurity () const;
		void SetOutSecurity (Account::SecurityType);

		bool GetOutSecurityRequired () const;
		void SetOutSecurityRequired (bool);

		bool GetSMTPAuth () const;
		void SetSMTPAuth (bool);

		bool GetAPOP () const;
		void SetAPOP (bool);

		bool GetAPOPRequired () const;
		void SetAPOPRequired (bool);

		void SetAllFolders (const QList<QStringList>&);

		QList<QStringList> GetFoldersToSync () const;
		void SetFoldersToSync (const QList<QStringList>&);

		QStringList GetOutFolder () const;
		void SetOutFolder (const QStringList&);
	private slots:
		void resetInPort ();
		void rebuildFoldersToSyncLine ();
	};
}
}
