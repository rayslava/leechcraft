/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2006-2014  Georg Rudoy
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#include "groupremovedialog.h"
#include <QStandardItemModel>
#include "interfaces/azoth/iclentry.h"
#include "interfaces/azoth/iaccount.h"

namespace LeechCraft
{
namespace Azoth
{
	GroupRemoveDialog::GroupRemoveDialog (const QList<QObject*>& entries, QWidget *parent)
	: QDialog (parent)
	, Entries_ (entries)
	, Model_ (new QStandardItemModel (this))
	{
		Model_->setHorizontalHeaderLabels ({ tr ("Name"), tr ("ID") });
		for (auto entryObj : entries)
		{
			auto entry = qobject_cast<ICLEntry*> (entryObj);

			auto nameItem = new QStandardItem (entry->GetEntryName ());
			nameItem->setCheckable (true);
			nameItem->setEditable (false);
			nameItem->setCheckState (Qt::Checked);

			auto idItem = new QStandardItem (entry->GetHumanReadableID ());
			idItem->setEditable (false);

			Model_->appendRow ({ nameItem, idItem });
		}

		Ui_.setupUi (this);
		Ui_.View_->setModel (Model_);
	}

	QList<QObject*> GroupRemoveDialog::GetSelectedEntries () const
	{
		QList<QObject*> result;
		for (auto i = 0; i < Model_->rowCount (); ++i)
			if (Model_->item (i)->checkState () == Qt::Checked)
				result << Entries_.at (i);
		return result;
	}

	void GroupRemoveDialog::accept ()
	{
		for (auto entryObj : GetSelectedEntries ())
		{
			auto entry = qobject_cast<ICLEntry*> (entryObj);
			auto acc = qobject_cast<IAccount*> (entry->GetParentAccount ());
			acc->RemoveEntry (entryObj);
		}

		QDialog::accept ();
	}
}
}
