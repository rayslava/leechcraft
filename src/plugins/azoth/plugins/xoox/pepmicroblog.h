/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2006-2014  Georg Rudoy
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#pragma once

#include "pepeventbase.h"
#include <QString>
#include <QDateTime>
#include <QPair>
#include <QMap>
#include <interfaces/azoth/isupportmicroblogs.h>

namespace LeechCraft
{
namespace Azoth
{
namespace Xoox
{
	class PEPMicroblog : public PEPEventBase
	{
		QString EventID_;

		QString AuthorName_;
		QString AuthorURI_;

		QMap<QString, QString> Contents_;

		QDateTime Published_;
		QDateTime Updated_;
	public:
		struct AlternateLink
		{
			QString Type_;
			QString Href_;
		};
		typedef QList<AlternateLink> AlternateLinks_t;

		struct ReplyInfo
		{
			QString Type_;
			QString Ref_;
			QString Href_;
		};
		typedef QList<ReplyInfo> ReplyInfos_t;
	private:
		AlternateLinks_t Alternates_;

		ReplyInfos_t InReplyTo_;
	public:
		static QString GetNodeString ();

		PEPMicroblog ();
		PEPMicroblog (const Post&);

		QXmppElement ToXML () const;
		void Parse (const QDomElement&);
		QString Node () const;

		PEPEventBase* Clone () const;

		operator Post () const;

		QString GetEventID () const;

		QString GetAuthorName () const;
		void SetAuthorName (const QString&);
		QString GetAuthorURI () const;
		void SetAuthorURI (const QString&);

		QString GetContent (const QString&) const;
		void SetContent (const QString& type, const QString& content);

		QDateTime GetPublishedDate () const;
		void SetPublishedDate (const QDateTime&);

		QDateTime GetUpdatedDate () const;
		void SetUpdatedDate (const QDateTime&);

		AlternateLinks_t GetAlternateLinks () const;
		void SetAlternateLinks (const AlternateLinks_t&);
		void AddAlternateLink (const AlternateLink&);

		ReplyInfos_t GetInReplyTos () const;
		void SetInReplyTos (const ReplyInfos_t&);
		void AddInReplyTos (const ReplyInfo&);
	};
}
}
}
