/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2006-2014  Georg Rudoy
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#ifndef PLUGINS_AZOTH_PLUGINS_ZHEET_TRANSFERJOB_H
#define PLUGINS_AZOTH_PLUGINS_ZHEET_TRANSFERJOB_H
#include <QObject>
#include <msn/util.h>
#include <interfaces/azoth/itransfermanager.h>

namespace MSN
{
	class SwitchboardServerConnection;
}

namespace LeechCraft
{
namespace Azoth
{
namespace Zheet
{
	class MSNAccount;
	class MSNBuddyEntry;
	class Callbacks;

	class TransferJob : public QObject
					  , public ITransferJob
	{
		Q_OBJECT
		Q_INTERFACES (LeechCraft::Azoth::ITransferJob);

		uint ID_;
		MSNAccount *A_;
		Callbacks *CB_;
		MSNBuddyEntry *Buddy_;

		TransferDirection Dir_;
		QString Filename_;
		quint64 Done_;
		quint64 Total_;

		TransferState State_;
	public:
		TransferJob (const MSN::fileTransferInvite&,
				Callbacks*, MSNAccount*);
		TransferJob (uint, const QString&,
				MSNBuddyEntry*, Callbacks*, MSNAccount*);

		QString GetSourceID () const;
		QString GetName () const;
		qint64 GetSize () const;
		QString GetComment () const;
		TransferDirection GetDirection () const;
		void Accept (const QString&);
		void Abort ();
	private:
		MSN::SwitchboardServerConnection* GetSB () const;
	private slots:
		void handleProgress (uint, quint64, quint64);
		void handleFailed (uint);
		void handleFinished (uint);
		void handleGotResponse (uint, bool);
	signals:
		void transferProgress (qint64 done, qint64 total);
		void errorAppeared (TransferError error, const QString& msg);
		void stateChanged (TransferState state);
	};
}
}
}

#endif
