/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2006-2014  Georg Rudoy
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#pragma once

#include <QByteArray>
#include "headers.h"
#include "conversions.h"

class QString;

namespace LeechCraft
{
namespace Azoth
{
namespace Vader
{
namespace Proto
{
	struct Packet;

	class PacketFactory
	{
		quint32 Seq_;
	public:
		PacketFactory ();

		Packet Hello ();
		Packet Ping ();
		Packet Login (const QString& login, const QString& pass,
				quint32 state, const QString& status, const QString& ua);
		Packet SetStatus (quint32 state, const QString& status);

		Packet RequestInfo (const QString& id);
		Packet Message (MsgFlags flags, const QString& to, const QString& msg);
		Packet MessageAck (const QString& from, quint32 msgId);
		Packet OfflineMessageAck (const UIDL& id);
		Packet Microblog (BlogStatus st, const QString& text);
		Packet SMS (const QString& to, const QString& text);

		Packet AddGroup (const QString& name, int numGroups);
		Packet AddContact (ContactOpFlags flags, quint32 group,
				const QString& email, const QString& name);
		Packet ModifyContact (quint32 cid, ContactOpFlags flags,
				quint32 group, const QString& email, const QString& name, const QString& phone);
		Packet RemoveContact (quint32 id,
				const QString& email, const QString& name);

		Packet Authorize (const QString&);
		Packet RequestKey ();
	};
}
}
}
}
