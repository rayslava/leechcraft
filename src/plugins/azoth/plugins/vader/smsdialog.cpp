/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2006-2014  Georg Rudoy
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#include "smsdialog.h"

namespace LeechCraft
{
namespace Azoth
{
namespace Vader
{
	SMSDialog::SMSDialog (QString phone, QWidget *parent)
	: QDialog (parent)
	{
		Ui_.setupUi (this);

		if (!phone.startsWith ('+'))
			phone.prepend ('+');
		Ui_.Phone_->setText (phone);
	}

	QString SMSDialog::GetPhone () const
	{
		return Ui_.Phone_->text ();
	}

	QString SMSDialog::GetText() const
	{
		return Ui_.Text_->toPlainText ();
	}

	void SMSDialog::on_Text__textChanged ()
	{
		const auto& text = GetText ();
		const int size = text.size ();

		bool isAllLatin = true;
		for (int i = 0; i < size; ++i)
		{
			const QChar& ch = text.at (i);
			if (!ch.isLetter ())
				continue;

			char latin = ch.toLatin1 ();
			if (('a' <= latin && latin <= 'z') ||
					('A' <= latin && latin <= 'Z'))
				continue;

			isAllLatin = false;
			break;
		}

		const int maxSize = isAllLatin ? 135 : 35;
		Ui_.Counter_->setText (QString ("%1/%2")
				.arg (size)
				.arg (maxSize));

		if (text.size () > maxSize)
		{
			Ui_.Text_->setPlainText (text.left (maxSize));
			Ui_.Text_->moveCursor (QTextCursor::End);
		}
	}
}
}
}
