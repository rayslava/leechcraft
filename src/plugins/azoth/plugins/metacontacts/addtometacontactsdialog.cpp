/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2006-2014  Georg Rudoy
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#include "addtometacontactsdialog.h"
#include <interfaces/azoth/iclentry.h>
#include "metaentry.h"

namespace LeechCraft
{
namespace Azoth
{
namespace Metacontacts
{
	AddToMetacontactsDialog::AddToMetacontactsDialog (ICLEntry *entry,
			const QList<MetaEntry*>& metas, QWidget *parent)
	: QDialog (parent)
	{
		Ui_.setupUi (this);
		
		Ui_.EntryName_->setText (QString ("%1 (%2)")
				.arg (entry->GetEntryName ())
				.arg (entry->GetHumanReadableID ()));
		
		Ui_.NewMetaname_->setText (entry->GetEntryName ());
		
		Q_FOREACH (MetaEntry *entry, metas)
			Ui_.ExistingMeta_->addItem (entry->GetEntryName (),
					QVariant::fromValue<QObject*> (entry));
	}
	
	MetaEntry* AddToMetacontactsDialog::GetSelectedMeta () const
	{
		QObject *obj = Ui_.ExistingMeta_->
				itemData (Ui_.ExistingMeta_->currentIndex ()).value<QObject*> ();
		return qobject_cast<MetaEntry*> (obj);
	}
	
	QString AddToMetacontactsDialog::GetNewMetaName () const
	{
		return Ui_.NewMetaname_->text ();
	}
	
	void AddToMetacontactsDialog::on_ExistingMeta__currentIndexChanged (int idx)
	{
		Ui_.NewMetaname_->setEnabled (!idx);
	}
}
}
}
