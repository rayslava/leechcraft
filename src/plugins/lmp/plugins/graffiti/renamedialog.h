/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2006-2014  Georg Rudoy
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#pragma once

#include <QDialog>
#include <interfaces/lmp/ilmpproxy.h>
#include <interfaces/lmp/mediainfo.h>
#include "ui_renamedialog.h"

class QStandardItemModel;

namespace LeechCraft
{
namespace LMP
{
namespace Graffiti
{
	class RenameDialog : public QDialog
	{
		Q_OBJECT

		const ILMPProxy_Ptr Proxy_;
		decltype (ILMPProxy_Ptr ()->GetSubstGetters ()) Getters_;

		Ui::RenameDialog Ui_;

		QStandardItemModel *PreviewModel_;

		QList<QPair<MediaInfo, QString>> Infos_;
	public:
		RenameDialog (ILMPProxy_Ptr, QWidget* = 0);

		void SetInfos (const QList<MediaInfo>&);
	private:
		QList<QPair<QString, QString>> GetRenames () const;
		void Rename (const QList<QPair<QString, QString>>&);
	public slots:
		void accept ();
	private slots:
		void updatePreview ();
	};
}
}
}
