/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2006-2014  Georg Rudoy
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#include <QtDebug>
#include "singleregexp.h"

namespace LeechCraft
{
namespace Aggregator
{
	namespace
	{
		inline bool IsRegexpValid (const QString& rx)
		{
			QString str = rx;
			if (rx.startsWith ("\\link"))
				str = rx.right (rx.size () - 5);
			return QRegExp (str).isValid () && !QRegExp (str).isEmpty ();
		}
	};
	
	SingleRegexp::SingleRegexp (const QString& title,
			const QString& body,
			bool modifier,
			QWidget *parent)
	: QDialog (parent)
	{
		Ui_.setupUi (this);
		connect (Ui_.TitleEdit_,
				SIGNAL (textChanged (const QString&)),
				this,
				SLOT (lineEdited (const QString&)));
		connect (Ui_.BodyEdit_,
				SIGNAL (textChanged (const QString&)),
				this,
				SLOT (lineEdited (const QString&)));
	
		Ui_.TitleEdit_->setText (title);
		Ui_.BodyEdit_->setText (body);
	
		if (modifier)
			Ui_.TitleEdit_->setEnabled (false);
	
		lineEdited (title, Ui_.TitleEdit_);
		lineEdited (body, Ui_.BodyEdit_);
	}
	
	QString SingleRegexp::GetTitle () const
	{
		return Ui_.TitleEdit_->text ();
	}
	
	QString SingleRegexp::GetBody () const
	{
		return Ui_.BodyEdit_->text ();
	}
	
	void SingleRegexp::lineEdited (const QString& newText, QWidget *setter)
	{
		if (IsRegexpValid (newText))
			(setter ? setter : qobject_cast<QWidget*> (sender ()))->
				setStyleSheet ("background-color: rgba(0, 255, 0, 50);");
		else
			(setter ? setter : qobject_cast<QWidget*> (sender ()))->
				setStyleSheet ("background-color: rgba(255, 0, 0, 50);");
	}
}
}
