/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2006-2014  Georg Rudoy
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#pragma once

#include <memory>
#include <QHash>
#include <QDebug>
#include <QIcon>
#include <interfaces/core/icoreproxy.h>
#include <util/utilconfig.h>
#include "itemtypes.h"

namespace LeechCraft
{
namespace Util
{
namespace XDG
{
	class Item;

	typedef std::shared_ptr<Item> Item_ptr;

	class UTIL_API Item
	{
		QHash<QString, QString> Name_;
		QHash<QString, QString> GenericName_;
		QHash<QString, QString> Comments_;

		QStringList Categories_;
		QString Command_;
		QString WD_;

		QString IconName_;
		QIcon Icon_;

		bool IsHidden_;
		Type Type_;
	public:
		bool operator== (const Item&) const;

		bool IsValid () const;

		bool IsHidden () const;

		void Execute (ICoreProxy_ptr) const;

		QString GetName (const QString&) const;
		QString GetGenericName (const QString&) const;
		QString GetComment (const QString&) const;
		QString GetIconName () const;
		QStringList GetCategories () const;

		Type GetType () const;
		QString GetCommand () const;
		QString GetWorkingDirectory () const;

		QString GetPermanentID () const;

		void SetIcon (const QIcon&);
		QIcon GetIcon () const;

		QDebug DebugPrint (QDebug) const;

		static Item_ptr FromDesktopFile (const QString&);
	};

	QDebug operator<< (QDebug, const Item&);
}
}
}
