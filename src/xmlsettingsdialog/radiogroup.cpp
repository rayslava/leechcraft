/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2006-2014  Georg Rudoy
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#include <QButtonGroup>
#include <QtDebug>
#include <QRadioButton>
#include <QVBoxLayout>
#include "radiogroup.h"

using namespace LeechCraft;

RadioGroup::RadioGroup (QWidget *parent)
: QWidget (parent)
{
	Group_ = new QButtonGroup (this);
	setLayout (new QVBoxLayout);
}

void RadioGroup::AddButton (QRadioButton *button, bool def)
{
	if (def)
		Value_ = button->objectName ();
	button->setChecked (def);
	Group_->addButton (button);
	qobject_cast<QVBoxLayout*> (layout ())->addWidget (button);
	connect (button, SIGNAL (toggled (bool)), this, SLOT (handleToggled (bool)));
}

QString RadioGroup::GetValue () const
{
	return Value_;
}

void RadioGroup::SetValue (const QString& value)
{
	QRadioButton *button = findChild<QRadioButton*> (value);
	if (!button)
	{
		qWarning () << Q_FUNC_INFO << "could not find button for" << value;
		return;
	}
	button->setChecked (true);
}

void RadioGroup::handleToggled (bool value)
{
	if (value)
	{
		Value_ = sender ()->objectName ();
		emit valueChanged ();
	}
}

