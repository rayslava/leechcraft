/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2006-2013  Georg Rudoy
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#include "childactioneventfilter.h"
#include <QEvent>
#include <QAction>
#include <QPushButton>
#include <QTabWidget>
#include <QActionEvent>
#include <QToolButton>
#include <QMenu>
#include <QtDebug>
#include "iconthemeengine.h"

using namespace LeechCraft;

ChildActionEventFilter::ChildActionEventFilter (QObject *parent)
: QObject (parent)
{
}

ChildActionEventFilter::~ChildActionEventFilter ()
{
}

bool ChildActionEventFilter::eventFilter (QObject *obj, QEvent *event)
{
	if (event->type () == QEvent::ChildAdded ||
			event->type () == QEvent::ChildPolished)
	{
		QChildEvent *e = static_cast<QChildEvent*> (event);
		auto child = e->child ();
		child->installEventFilter (this);

		if (auto act = qobject_cast<QAction*> (child))
			IconThemeEngine::Instance ().UpdateIconSet ({ act });
		else if (auto tb = qobject_cast<QToolButton*> (child))
		{
			if (auto act = tb->defaultAction ())
				IconThemeEngine::Instance ().UpdateIconSet ({ act });
			if (auto menu = tb->menu ())
				IconThemeEngine::Instance ().UpdateIconSet ({ menu->menuAction () });
		}
		else if (auto pb = qobject_cast<QPushButton*> (child))
			IconThemeEngine::Instance ().UpdateIconSet ({ pb });
		else
		{
			IconThemeEngine::Instance ()
				.UpdateIconSet (child->findChildren<QAction*> ());
			IconThemeEngine::Instance ()
				.UpdateIconSet (child->findChildren<QPushButton*> ());
			IconThemeEngine::Instance ()
				.UpdateIconSet (child->findChildren<QTabWidget*> ());
		}
		return false;
	}
	else
		return QObject::eventFilter (obj, event);
}

