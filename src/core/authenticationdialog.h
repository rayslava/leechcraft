/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2006-2014  Georg Rudoy
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#ifndef AUTHENTICATIONDIALOG_H
#define AUTHENTICATIONDIALOG_H
#include <QDialog>
#include "ui_authenticationdialog.h"

namespace LeechCraft
{
	/** Provides a standard authentication dialog, for example, for
	 * proxies, SSL stuff etc.
	 */
	class AuthenticationDialog : public QDialog
	{
		Q_OBJECT

		Ui::AuthenticationDialog Ui_;
	public:
		/** Initializes the dialog. Sets initial login to login, initial
		 * password to password and message of the dialog to message.
		 *
		 * @param[in] message The message explaining the dialog.
		 * @param[in] login Initial (suggested) login.
		 * @param[in] password Initial (suggested) password.
		 * @param[in] parent Parent widget of this dialog.
		 */
		AuthenticationDialog (const QString& message,
				const QString& login,
				const QString& password,
				QWidget *parent = 0);

		/** Returns the login.
		 *
		 * @return The login.
		 */
		QString GetLogin () const;

		/** Returns the password.
		 *
		 * @return The password.
		 */
		QString GetPassword () const;

		/** Returns whether user has chosen to save authentication data.
		 *
		 * @return True if auth data should be saved, false otherwise.
		 */
		bool ShouldSave () const;
	};
};

#endif

